const raw
const bytes = [];

for (let i = 0; i < raw.length; i += 2) {
    bytes.push(`${raw.charAt(i)}${raw.charAt(i + 1)}`);
}

for (let i = 0; i < bytes.length - 1; i++)Â {
    if (bytes[i] != "00") {
        if (bytes[i] == bytes[i + 1]) {
            console.log(i, bytes[i], parseInt(bytes[i], 16));
        }
    }
}

// spoiler: it's Nx32x32 (NN2020 in hex)
// The X dimension (height) seems to be compressed depending on the blocks on the map.
// For Empty and Line, it's 0x0C (12).

